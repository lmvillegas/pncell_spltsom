#
# File name: im_policies.baroc
# Version: 11.0.00.001
# Copyright 1998-2018 BMC Software, Inc. All Rights Reserved
#
#---------------------------------------------------------------------
#
#  Description: Policy related class definitions
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
#  Common definitions
#---------------------------------------------------------------------

MC_DATA_CLASS:
    IM_POLICY ISA POLICY DEFINES
    {
        active_timeframes        : LIST_OF STRING;
        except_timeframes        : LIST_OF STRING;
        active_global_timeframes : LIST_OF STRING;
        except_global_timeframes : LIST_OF STRING;
        selector_name            : STRING;
        selector_class           : STRING;
        selector_ecf             : ECF CORE_EVENT;
        ordinal                  : INTEGER, default=0;   
        during_schedule          : MC_YESNO, read_only=yes, default=YES;
    };
END

ENUMERATION TIME_SCALING_FACTOR
    1     SECONDS
    60    MINUTES
    3600  HOURS
    86400 DAYS
END


#---------------------------------------------------------------------
#  Blackout policy
#---------------------------------------------------------------------

ENUMERATION BLACKOUT_START_ACTION
    1   ''	    
    10	'im_blackout_actions.blackout'
END

ENUMERATION BLACKOUT_END_ACTION
    1   ''	    
    10	'im_blackout_actions.reopen'
END

ENUMERATION BLACKOUT_DURING_SCHEDULE_OP
    10	 BLACKOUT
    100   FILTER
END


MC_DATA_CLASS:
    IM_BLACKOUT_POLICY ISA IM_POLICY
DEFINES
{
     start_action: BLACKOUT_START_ACTION;
     end_action: BLACKOUT_END_ACTION;
     during_schedule_op: BLACKOUT_DURING_SCHEDULE_OP, default=BLACKOUT ;
     recurrence_mode: STRING;
};
END

MC_DATA_CLASS:
    IM_BLACKOUT_EVENT_TABLE ISA DATA
DEFINES
{
     event_ueid: STRING, key=yes;
     policy_udid: STRING, key=yes;
};
END

#---------------------------------------------------------------------
#  Enrichment policy
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_ENRICHMENT_POLICY ISA IM_POLICY
    DEFINES
    {
        override_msg            : INTEGER, default=0;
        override_event_severity : INTEGER, default=0;
        override_event_priority : INTEGER, default=0;
        override_event_category : INTEGER, default=0;
        override_object_type    : INTEGER, default=0;
        override_location       : INTEGER, default=0;
        override_service        : INTEGER, default=0;
        msg_format              : STRING;
        msg_slots               : LIST_OF STRING;
        event_severity          : SEVERITY;
        event_priority          : MC_PRIORITY;
        event_category          : MC_EVENT_CATEGORY;
        object_type             : STRING;
        location                : STRING;
        service                 : STRING;
    };
END


#---------------------------------------------------------------------
#  Data driven policies
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_DDEN_POLICY ISA IM_POLICY
    DEFINES
    {
	execution_order         : INTEGER, default=1;
	event_class             : STRING;
        lookup_table            : STRING;
        lookup_table_tag        : STRING;
        match_fields            : LIST_OF STRING;
        output_fields           : LIST_OF STRING;
        redo_fields             : LIST_OF STRING;
        trace                   : MC_YESNO, default=NO;
	data_file               : STRING;
	data_file_separator     : STRING;
	pmep_file               : STRING;
	last_import_time        : STRING;
	last_import_type        : STRING;
	num_of_total_records    : INTEGER;
        num_of_failed_records   : INTEGER;
    };
END

# Data Driven Enrichment Match Table
# the match table used by the IM_DDEN_POLICY
MC_DATA_CLASS: 
    DDEN_MATCH_TABLE ISA BEM_MATCH_TABLE;
END

# Data Driven Blackout Policy
MC_DATA_CLASS: IM_DDBL_POLICY ISA IM_POLICY
    DEFINES
    {
	execution_order         : INTEGER, default=1;
	event_class             : STRING;
        lookup_table            : STRING;
        lookup_table_tag        : STRING;
        match_fields            : LIST_OF STRING;
        trace                   : MC_YESNO, default=NO;
	data_file               : STRING;
	data_file_separator     : STRING;
	pmep_file               : STRING;
	last_import_time        : STRING;
	last_import_type        : STRING;
	num_of_total_records    : INTEGER;
        num_of_failed_records   : INTEGER;
    };
END

# Data Driven Blackout Match Table
# the match table used by IM_DDBL_POLICY
MC_DATA_CLASS: DDBL_MATCH_TABLE ISA BEM_MATCH_TABLE
    DEFINES
    {
        active_timeframes : LIST_OF STRING;
        except_timeframes : LIST_OF STRING;
        active_global_timeframes : LIST_OF STRING;
        except_global_timeframes : LIST_OF STRING;
    };
END


#---------------------------------------------------------------------
#  Suppression policy
#---------------------------------------------------------------------

MC_DATA_CLASS: 
    IM_SUPPRESSION_POLICY ISA IM_POLICY;
END


#---------------------------------------------------------------------
#  Closure policy
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_CLOSURE_POLICY ISA IM_POLICY
    DEFINES
    {
        closed_events       : QUERY CORE_EVENT;
        closed_events_descr : STRING;
        time_window         : INTEGER, default=0;
        time_scale          : TIME_SCALING_FACTOR, default=SECONDS;
        supp_closing_event  : INTEGER, default=0;
		when_slot           : STRING;
        when_operator       : STRING;
        when_value          : STRING;
    };
END

#---------------------------------------------------------------------
#  Recurrence policy
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_RECURRENCE_POLICY ISA IM_POLICY
    DEFINES
    {
        time_window         : INTEGER, default=0;
        time_scale          : TIME_SCALING_FACTOR, default=SECONDS;
        update_severity     : INTEGER, default=1;
        keep_highest_sev    : INTEGER, default=1;
        update_priority     : INTEGER, default=1;
        keep_highest_pri    : INTEGER, default=1;
        update_msg          : INTEGER, default=1;
        update_parameter    : INTEGER, default=1;
		update_events	    : QUERY CORE_EVENT;
        update_events_descr : STRING;
    };
END


#---------------------------------------------------------------------
#  Correlation policy
#---------------------------------------------------------------------

ENUMERATION CORRELATION_EFFECT
    0   CLOSE_NORMAL
    10  CLOSE_NOW
    20  CLOSE_WITH_CAUSE
END
   
MC_DATA_CLASS: IM_CORRELATION_POLICY ISA IM_POLICY
    DEFINES
    {
        cause_event_1           : QUERY CORE_EVENT;
        cause_event_descr_1     : STRING;
        time_window_1           : INTEGER, default=0;
        time_scale_1            : TIME_SCALING_FACTOR, default=SECONDS;
        effect_closure_1        : CORRELATION_EFFECT, default=CLOSE_NORMAL;
        escalate_cause_1        : INTEGER, default=1;
        cause_pri_levels_1      : INTEGER, default=0;
        cause_priority_1        : MC_PRIORITY, default=PRIORITY_4;
        de_escalate_effect_1    : INTEGER, default=1;
        effect_pri_levels_1     : INTEGER, default=0;
        effect_priority_1       : MC_PRIORITY, default=PRIORITY_4;
        cause_event_2           : QUERY EVENT, default='';
        cause_event_descr_2     : STRING;
        time_window_2           : INTEGER, default=0;
        time_scale_2            : TIME_SCALING_FACTOR, default=SECONDS;
        effect_closure_2        : CORRELATION_EFFECT, default=CLOSE_NORMAL;
        escalate_cause_2        : INTEGER, default=1;
        cause_pri_levels_2      : INTEGER, default=0;
        cause_priority_2        : MC_PRIORITY, default=PRIORITY_4;
        de_escalate_effect_2    : INTEGER, default=1;
        effect_pri_levels_2     : INTEGER, default=0;
        effect_priority_2       : MC_PRIORITY, default=PRIORITY_4;
        cause_event_3           : QUERY EVENT, default='';
        cause_event_descr_3     : STRING;
        time_window_3           : INTEGER, default=0;
        time_scale_3            : TIME_SCALING_FACTOR, default=SECONDS;
        effect_closure_3        : CORRELATION_EFFECT, default=CLOSE_NORMAL;
        escalate_cause_3        : INTEGER, default=1;
        cause_pri_levels_3      : INTEGER, default=0;
        cause_priority_3        : MC_PRIORITY, default=PRIORITY_4;
        de_escalate_effect_3    : INTEGER, default=1;
        effect_pri_levels_3     : INTEGER, default=0;
        effect_priority_3       : MC_PRIORITY, default=PRIORITY_4;
        cause_event_4           : QUERY EVENT, default='';
        cause_event_descr_4     : STRING;
        time_window_4           : INTEGER, default=0;
        time_scale_4            : TIME_SCALING_FACTOR, default=SECONDS;
        effect_closure_4        : CORRELATION_EFFECT, default=CLOSE_NORMAL;
        escalate_cause_4        : INTEGER, default=1;
        cause_pri_levels_4      : INTEGER, default=0;
        cause_priority_4        : MC_PRIORITY, default=PRIORITY_4;
        de_escalate_effect_4    : INTEGER, default=1;
        effect_pri_levels_4     : INTEGER, default=0;
        effect_priority_4       : MC_PRIORITY, default=PRIORITY_4;
        cause_event_5           : QUERY EVENT, default='';
        cause_event_descr_5     : STRING;
        time_window_5           : INTEGER, default=0;
        time_scale_5            : TIME_SCALING_FACTOR, default=SECONDS;
        effect_closure_5        : CORRELATION_EFFECT, default=CLOSE_NORMAL;
        escalate_cause_5        : INTEGER, default=1;
        cause_pri_levels_5      : INTEGER, default=0;
        cause_priority_5        : MC_PRIORITY, default=PRIORITY_4;
        de_escalate_effect_5    : INTEGER, default=1;
        effect_pri_levels_5     : INTEGER, default=0;
        effect_priority_5       : MC_PRIORITY, default=PRIORITY_4;
    };
END


#---------------------------------------------------------------------
#  Notification policy
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_NOTIFICATION_POLICY ISA IM_POLICY
    DEFINES
    {
        notification_service    : STRING;
        notify_targets          : LIST_OF STRING;
        notify_source           : STRING;
        notify_subject_format   : STRING;
        notify_subject_slots    : LIST_OF STRING;
        notify_on_operations    : LIST_OF STATUS, default=[OPEN];
        notify_msg_format       : STRING;
        notify_msg_slots        : LIST_OF STRING;
        auto_ack                : INTEGER, default=0;
        auto_assign             : INTEGER, default=0;
        assign_to_user          : STRING;
        date_format             : STRING, default="%c";
        when_slot               : STRING;
        when_operator           : STRING;
        when_value              : STRING;
        from_operator           : STRING;
        from_value              : STRING;
	change_only		: MC_YESNO, default=NO;
    };
END

ENUMERATION NOTIFICATION_SERVICE_TYPE
    10  SERVICE_TYPE_COMMAND
    20  SERVICE_TYPE_GATEWAY
END
   
MC_DATA_CLASS: IM_NOTIFICATION_SERVICE ISA MC_CELL_DATA
    DEFINES
    {
        name                    : STRING, key = yes, read_only = yes;
        description             : STRING;
        type                    : NOTIFICATION_SERVICE_TYPE, default=SERVICE_TYPE_COMMAND;
        service                 : STRING;
        available_targets       : LIST_OF STRING;
    };
END


#---------------------------------------------------------------------
#  Threshold policy
#---------------------------------------------------------------------

ENUMERATION REGULATE_EVENT
    1   FIRST
    2   LAST
    3   HI_SEV
    4   LO_SEV
END

ENUMERATION DUP_OR_MATCH
    1   dup
    2   match
END


MC_DATA_CLASS: IM_THRESHOLD_POLICY ISA IM_POLICY
    DEFINES
    {
        num_events          : INTEGER,             default=1;
        time_window         : INTEGER,             default=1;
        time_scale          : TIME_SCALING_FACTOR, default=SECONDS;
        hold_events         : INTEGER,             default= 1;
        event_to_pass       : REGULATE_EVENT,      default=LAST;
        num_cont_events     : INTEGER,             default=0;
        cont_time_window    : INTEGER,             default=0;
        cont_time_scale     : TIME_SCALING_FACTOR, default=SECONDS;
        cont_end_operation  : STRING,              default="CLOSE";
        thresh_sev_levels   : INTEGER,             default=0;
        thresh_severity     : SEVERITY,            default=UNKNOWN;
	dup_or_match        : DUP_OR_MATCH, default=dup;
    };
END


#---------------------------------------------------------------------
#  Propagation policy
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_PROPAGATION_POLICY ISA IM_POLICY
    DEFINES
    {
        all_of_propagation_list : LIST_OF STRING;
        one_of_propagation_list : LIST_OF STRING;
	when_slot		: STRING, default=status;
	when_operator		: STRING;
	when_value		: STRING;
        from_operator           : STRING;
        from_value              : STRING;
	change_only		: MC_YESNO, default=NO;
    };
END


#---------------------------------------------------------------------
#  Escalation policy
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_ESCALATION_POLICY ISA IM_POLICY
    DEFINES
    {
        time_limit              : INTEGER, default=0;
        time_scale              : TIME_SCALING_FACTOR, default=SECONDS;
        escalate_if_ack         : INTEGER, default=0;
        escalate_if_assigned    : INTEGER, default=0;
        escalation_levels       : INTEGER, default=0;
        escalation_priority     : MC_PRIORITY, default=PRIORITY_4;
        quantity_esc_limit      : INTEGER, default=0;
        quantity_esc_time_limit : INTEGER, default=0;
        quantity_esc_time_scale : TIME_SCALING_FACTOR, default=SECONDS;
        quantity_esc_levels     : INTEGER, default=0;
        quantity_esc_priority   : MC_PRIORITY, default=PRIORITY_4;
	dup_or_match            : DUP_OR_MATCH, default=dup;
    };
END


#---------------------------------------------------------------------
#  Timeout policy
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_TIMEOUT_POLICY ISA IM_POLICY
    DEFINES
    {
        timeout_secs        : INTEGER, default=0;
        timeout_scale       : TIME_SCALING_FACTOR, default=SECONDS;
    };
END


#---------------------------------------------------------------------
#  Dynamic Remote Action policy
#---------------------------------------------------------------------

MC_DATA_CLASS: IM_DREA_POLICY ISA IM_POLICY
        DEFINES
        {
                action_name     : STRING;
         };
END


#---------------------------------------------------------------------
#  Enrichment from CI policy
#---------------------------------------------------------------------

MC_DATA_CLASS: CI_ENRICH_POLICY ISA IM_POLICY
    DEFINES
    {
	execution_order         : INTEGER, default=1;
        ci_slots                : LIST_OF STRING;
        event_slots             : LIST_OF STRING;
        trace                   : MC_YESNO, default=NO;
    };
END

#---------------------------------------------------------------------
#  Custom policy
#---------------------------------------------------------------------

MC_DATA_CLASS: 
    IM_BASE_CUSTOM_POLICY ISA IM_POLICY;
END


#---------------------------------------------------------------------
#   End Of file
#---------------------------------------------------------------------
